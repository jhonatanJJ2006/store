{"version":3,"sources":["alertas.js","añadirProducto.js","carrito.js","completar.js","descuento.js","imagenesAuth.js","menu.js","ofertas.js","swiper.js"],"names":["document","addEventListener","enviarMensaje","getElementById","nombre","value","apellido","email","mensaje","fetch","method","headers","Content-Type","body","JSON","stringify","then","response","json","data","title","icon","message","Swal","fire","showConfirmButton","result","isConfirmed","window","location","href","añadirCarrito","querySelectorAll","length","forEach","e","id","getAttribute","FormData","append","ok","Error","producto","exito","text","reload","console","log","catch","error","botonesMas","botonesMenos","cantidades","precios","cajonTotal","querySelector","camposFormulario","pais","provincia","ciudad","canton","calles","casa","telefono","btnPaypal","actualizarTotalCarrito","total","precio","precioValue","parseFloat","textContent","replace","toFixed","cantidadElem","previousElementSibling","cantidad","parseInt","botonMasidentificador","respuesta","$precioFinal","cantidadProducto","confirmButtonText","confirmButtonColor","timer","nextElementSibling","botonMenosidentificador","paypal","Buttons","style","layout","color","shape","label","createOrder","actions","campo","trim","validarCamposFormulario","order","create","purchase_units","amount","onApprove","capture","details","productos","productoID","push","payer","payer_id","name","given_name","preConfirm","render","completar","completa","showCancelButton","cancelButtonText","datos","dataset","usuarioId","envioFecha","resultado","barraPorcentaje","porcentajeSeleccionado","precioFinal","precioInicialElemento","precioInicial","innerText","porcentaje","precioConDescuento","porcentajeDescuento","dropzone","fileInput","form","preview","showPreview","file","reader","FileReader","onload","event","src","target","display","classList","add","readAsDataURL","click","preventDefault","remove","files","dataTransfer","formData","alert","menu","menuMovil","xIcon","opacidad","toggleScroll","toggle","slider","slides","currentIndex","setInterval","offset","transform","updateSlider","Swiper","slidesPerView","spaceBetween","loop","autoplay","delay","disableOnInteraction","pagination","el","clickable","navigation","nextEl","prevEl"],"mappings":"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","file":"bundle.js","sourcesContent":["document.addEventListener('DOMContentLoaded', function() {\r\n    const enviarMensaje = document.getElementById('enviarMensaje');\r\n\r\n    if (enviarMensaje) {\r\n        enviarMensaje.addEventListener('click', function() {\r\n            // Obtener los datos del formulario\r\n            const nombre = document.getElementById('nombre').value;\r\n            const apellido = document.getElementById('apellido').value;\r\n            const email = document.getElementById('email').value;\r\n            const mensaje = document.getElementById('mensaje').value;\r\n\r\n            // Verificar si los campos están vacíos\r\n            if (!nombre || !apellido || !email || !mensaje) {\r\n                Swal.fire({\r\n                    title: \"Todos los campos son requeridos\",\r\n                    icon: \"error\"\r\n                });\r\n                return; // Detener el proceso si algún campo está vacío\r\n            }\r\n\r\n            // Enviar los datos por AJAX\r\n            fetch('/contacto', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    nombre: nombre,\r\n                    apellido: apellido,\r\n                    email: email,\r\n                    mensaje: mensaje\r\n                }),\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                let title = \"Email Enviado Correctamente\";\r\n                let icon = \"success\";\r\n\r\n                if (data.message) {\r\n                    title = data.message;\r\n                    icon = \"success\";\r\n\r\n                } else {\r\n                    Swal.fire({\r\n                        title: title,\r\n                        icon: icon,\r\n                        showConfirmButton: true,\r\n                    }).then((result) => {\r\n                        if (result.isConfirmed && icon === \"success\") {\r\n                            window.location.href = '/contacto';\r\n                        }\r\n                    });\r\n                }\r\n\r\n            })\r\n        });\r\n    }\r\n\r\n});\r\n","(function() {\r\n    const añadirCarrito = document.querySelectorAll('.swiper__boton');\r\n\r\n    if (añadirCarrito.length > 0) {\r\n        añadirCarrito.forEach((e) => {\r\n            e.addEventListener('click', () => {\r\n                let id = e.getAttribute('data-id');\r\n\r\n                let data = new FormData();\r\n                data.append('id', id);\r\n\r\n                fetch('/carrito/nuevoProducto', {\r\n                    method: 'POST',\r\n                    body: data\r\n                })\r\n                .then(response => {\r\n                    if (!response.ok) {\r\n                        throw new Error('Error en la red');\r\n                    }\r\n                    return response.json();\r\n                })\r\n                .then(producto => {\r\n                    if (producto.exito) {\r\n                        Swal.fire({\r\n                            title: 'Éxito',\r\n                            text: producto.mensaje,\r\n                            icon: 'success'\r\n                        }).then((result) => {\r\n                            if (result.isConfirmed) {\r\n                                window.location.reload();\r\n                            }\r\n                        });                        \r\n                    } else {\r\n                        console.log(producto.mensaje); // Producto ya Añadido o sin stock\r\n                        Swal.fire('Aviso', producto.mensaje, 'warning');\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error:', error);\r\n                    Swal.fire('Error', 'Hubo un problema al añadir el producto', 'error');\r\n                });\r\n            });\r\n        });\r\n    }\r\n})();\r\n","(function() {\r\n    const botonesMas = document.querySelectorAll('.carrito__mas');\r\n    const botonesMenos = document.querySelectorAll('.carrito__menos');\r\n    const cantidades = document.querySelectorAll('.carrito__cantidad');\r\n    const precios = document.querySelectorAll('.precio_final');\r\n    const cajonTotal = document.querySelector('.pago_total');\r\n    const camposFormulario = {\r\n        pais: document.getElementById('pais'),\r\n        provincia: document.getElementById('provincia'),\r\n        ciudad: document.getElementById('ciudad'),\r\n        canton: document.getElementById('canton'),\r\n        calles: document.getElementById('calles'),\r\n        casa: document.getElementById('casa'),\r\n        nombre: document.getElementById('nombre'),\r\n        apellido: document.getElementById('apellido'),\r\n        telefono: document.getElementById('telefono')\r\n    };\r\n    const btnPaypal = document.querySelector('#paypal-button-container');\r\n\r\n    // Función para validar los campos del formulario y detectar cuál está vacío\r\n    function validarCamposFormulario() {\r\n\r\n        for (let campo in camposFormulario) {\r\n            if (camposFormulario[campo].value.trim() === '') {\r\n                Swal.fire({\r\n                    icon: 'warning',\r\n                    title: 'Campo vacío',\r\n                    text: `El campo \"${campo}\" está vacío. Por favor, rellénalo.`,\r\n                    confirmButtonText: 'Entendido',\r\n                    confirmButtonColor: '#d33',\r\n                });\r\n                return false; // Detener el proceso si hay un campo vacío\r\n            }\r\n        }\r\n        return true; // Todos los campos están completos\r\n    }\r\n\r\n    function actualizarTotalCarrito() {\r\n        let total = 0;\r\n\r\n        precios.forEach(precio => {\r\n            const precioValue = parseFloat(precio.textContent.replace('$ ', '').replace(',', '')) || 0;\r\n            total += precioValue;\r\n        });\r\n\r\n        cajonTotal.textContent = `$ ${total.toFixed(2)}`;\r\n        return total; // Para usar el total en el pago de PayPal\r\n    }\r\n\r\n    if (botonesMas) {\r\n        botonesMas.forEach(e => {\r\n            e.addEventListener('click', () => {\r\n                let cantidadElem = e.previousElementSibling;\r\n                let cantidad = parseInt(cantidadElem.textContent) || 1;\r\n                let botonMasidentificador = e.getAttribute('data-identificador');\r\n                cantidad++;\r\n\r\n                const data = new FormData();\r\n                data.append('id', botonMasidentificador);\r\n                data.append('cantidad', cantidad);\r\n\r\n                fetch('/carrito/comprobar', {\r\n                    method: 'POST',\r\n                    body: data\r\n                })\r\n                .then(response => response.json())\r\n                .then(respuesta => {\r\n                    if (respuesta) {\r\n                        let $precioFinal = respuesta * cantidad;\r\n\r\n                        cantidades.forEach(cantidadProducto => {\r\n                            if (cantidadProducto.getAttribute('data-identificador') === botonMasidentificador) {\r\n                                cantidadProducto.textContent = cantidad;\r\n                            }\r\n                        });\r\n\r\n                        precios.forEach(precio => {\r\n                            if (precio.getAttribute('data-identificador') === botonMasidentificador) {\r\n                                precio.textContent = `$ ${$precioFinal.toFixed(2)}`;\r\n                            }\r\n                        });\r\n\r\n                        actualizarTotalCarrito();\r\n                    } else {\r\n                        Swal.fire({\r\n                            icon: 'warning',\r\n                            title: 'Stock agotado',\r\n                            text: 'No hay más de este producto en stock',\r\n                            confirmButtonText: 'Entendido',\r\n                            confirmButtonColor: '#3085d6',\r\n                            timer: 3000\r\n                        });\r\n                    }\r\n                })\r\n                .catch(error => console.error('Hubo un problema con la petición fetch:', error));\r\n            });\r\n        });\r\n\r\n        botonesMenos.forEach(e => {\r\n            e.addEventListener('click', () => {\r\n                let cantidadElem = e.nextElementSibling;\r\n                let cantidad = parseInt(cantidadElem.textContent) || 1;\r\n                if (cantidad > 1) {\r\n                    let botonMenosidentificador = e.getAttribute('data-identificador');\r\n                    cantidad--;\r\n\r\n                    const data = new FormData();\r\n                    data.append('id', botonMenosidentificador);\r\n                    data.append('cantidad', cantidad);\r\n\r\n                    fetch('/carrito/comprobar', {\r\n                        method: 'POST',\r\n                        body: data\r\n                    })\r\n                    .then(response => response.json())\r\n                    .then(respuesta => {\r\n                        if (respuesta) {\r\n                            let $precioFinal = respuesta * cantidad;\r\n\r\n                            cantidades.forEach(cantidadProducto => {\r\n                                if (cantidadProducto.getAttribute('data-identificador') === botonMenosidentificador) {\r\n                                    cantidadProducto.textContent = cantidad;\r\n                                }\r\n                            });\r\n\r\n                            precios.forEach(precio => {\r\n                                if (precio.getAttribute('data-identificador') === botonMenosidentificador) {\r\n                                    precio.textContent = `$ ${$precioFinal.toFixed(2)}`;\r\n                                }\r\n                            });\r\n\r\n                            actualizarTotalCarrito();\r\n                        }\r\n                    })\r\n                    .catch(error => console.error('Hubo un problema con la petición fetch:', error));\r\n                }\r\n            });\r\n        });\r\n\r\n        if(btnPaypal) {\r\n\r\n            paypal.Buttons({\r\n                style: {\r\n                    layout: 'vertical',\r\n                    color:  'blue',\r\n                    shape:  'rect',\r\n                    label:  'paypal'\r\n                },\r\n                createOrder: function(data, actions) {\r\n                    if (!validarCamposFormulario()) {\r\n                        return; // Evita continuar con el pago si los campos no están completos\r\n                    }\r\n    \r\n                    const total = actualizarTotalCarrito();\r\n    \r\n                    // Crear el pedido de PayPal\r\n                    return actions.order.create({\r\n                        purchase_units: [{\r\n                            amount: {\r\n                                value: total.toFixed(2)\r\n                            }\r\n                        }]\r\n                    });\r\n                },\r\n                onApprove: function(data, actions) {\r\n                    // Capturar el pago\r\n                    return actions.order.capture().then(function(details) {\r\n                        // Recopilar productos con su ID y cantidad\r\n                        let productos = [];\r\n                        cantidades.forEach(cantidadElem => {\r\n                            let productoID = cantidadElem.getAttribute('data-identificador');\r\n                            let cantidad = parseInt(cantidadElem.textContent) || 1;\r\n                            productos.push({ id: productoID, cantidad: cantidad });\r\n                        });\r\n    \r\n                        const data = new FormData();\r\n                        data.append('orderID', details.id);\r\n                        data.append('payerID', details.payer.payer_id);\r\n                        data.append('productos', JSON.stringify(productos));\r\n    \r\n                        data.append('pais', camposFormulario.pais.value);\r\n                        data.append('provincia', camposFormulario.provincia.value);\r\n                        data.append('ciudad', camposFormulario.ciudad.value);\r\n                        data.append('canton', camposFormulario.canton.value);\r\n                        data.append('calles', camposFormulario.calles.value);\r\n                        data.append('casa', camposFormulario.casa.value);\r\n                        data.append('nombre', camposFormulario.nombre.value);\r\n                        data.append('apellido', camposFormulario.apellido.value);\r\n                        data.append('telefono', camposFormulario.telefono.value);\r\n    \r\n                        return fetch('/carrito/pagoExitoso', {\r\n                            method: 'POST',\r\n                            body: data\r\n                        })\r\n                        .then(response => response.json())\r\n                        .then(result => {\r\n                            Swal.fire({\r\n                                icon: 'success',\r\n                                title: 'Compra realizada',\r\n                                text: `Gracias por tu compra, ${details.payer.name.given_name}. El tiempo estimado de envío es de hasta 2 semanas.`,\r\n                                confirmButtonText: 'OK',\r\n                                confirmButtonColor: '#3085d6',\r\n                                preConfirm: () => {\r\n                                    window.location.href = '/';\r\n                                }\r\n                            });                        \r\n                        })\r\n                        .catch(error => {\r\n                            console.error('Error en la confirmación del pago:', error);\r\n                            Swal.fire({\r\n                                icon: 'error',\r\n                                title: 'Error en el pago',\r\n                                text: 'Hubo un problema procesando tu pago. Intenta nuevamente.',\r\n                                confirmButtonText: 'Entendido',\r\n                                confirmButtonColor: '#d33'\r\n                            });\r\n                        });\r\n                        \r\n    \r\n                    });\r\n                },\r\n            }).render('#paypal-button-container');\r\n\r\n        }\r\n    }\r\n})();\r\n","(function() {\r\n\r\n    const completar = document.querySelectorAll('.compra-eliminar');\r\n\r\n    if(completar) {\r\n\r\n        completar.forEach(completa => {\r\n            completa.addEventListener('click', function() {\r\n                Swal.fire({\r\n                    title: '¿Está seguro de eliminar el registro?',\r\n                    showCancelButton: true,\r\n                    confirmButtonText: 'Sí',\r\n                    cancelButtonText: 'Cancelar'\r\n                }).then((result) => {\r\n                    if (result.isConfirmed) {\r\n                        const datos = new FormData();\r\n                        datos.append('id', completa.dataset.usuarioId);\r\n                        datos.append('fecha', completa.dataset.envioFecha);\r\n\r\n                        fetch('/admin/compras/eliminar', {\r\n                            method: 'POST',\r\n                            body: datos\r\n                        })\r\n                        .then( respuesta => respuesta.json() )\r\n                        .then(resultado => {\r\n                            if(resultado) {\r\n                                window.location.href = '/admin/compras';\r\n                            }\r\n                        }) \r\n                    }\r\n                });\r\n            });\r\n        });        \r\n        \r\n    }\r\n  \r\n})();\r\n","(function() {\r\n\r\n    const barraPorcentaje = document.getElementById('barraPorcentaje');\r\n\r\n    if(barraPorcentaje) {\r\n\r\n        const porcentajeSeleccionado = document.getElementById('porcentajeSeleccionado');\r\n        const precioFinal = document.getElementById('precioFinal');\r\n        const precioInicialElemento = document.getElementById('precioActual');\r\n        const precioInicial = parseFloat(precioInicialElemento.innerText.replace('$', ''));\r\n        barraPorcentaje.addEventListener('input', () => {\r\n            const porcentaje = barraPorcentaje.value;\r\n            const descuento = precioInicial * (porcentaje / 100);\r\n            const precioConDescuento = precioInicial - descuento;\r\n    \r\n            porcentajeSeleccionado.textContent = porcentaje + '%';\r\n            precioFinal.value = precioConDescuento.toFixed(2);\r\n            porcentajeDescuento.value = porcentaje;\r\n        });\r\n\r\n    }\r\n\r\n})();\r\n","(function() {\r\n    document.addEventListener('DOMContentLoaded', () => {\r\n        const dropzone = document.getElementById('dropzone');\r\n        const fileInput = document.getElementById('imagen');\r\n        const form = document.getElementById('formulario-administrador');\r\n        const preview = document.getElementById('preview');\r\n\r\n        if(dropzone) {\r\n\r\n            // Abre el selector de archivos al hacer clic en el área de la dropzone\r\n            dropzone.addEventListener('click', () => {\r\n                fileInput.click();\r\n            });\r\n    \r\n            // Manejando el arrastre y suelta de archivos\r\n            dropzone.addEventListener('dragover', (event) => {\r\n                event.preventDefault();\r\n                dropzone.classList.add('dragging');\r\n            });\r\n    \r\n            dropzone.addEventListener('dragleave', () => {\r\n                dropzone.classList.remove('dragging');\r\n            });\r\n    \r\n            dropzone.addEventListener('drop', (event) => {\r\n                event.preventDefault();\r\n                dropzone.classList.remove('dragging');\r\n                const files = event.dataTransfer.files;\r\n                if (files.length > 0) {\r\n                    fileInput.files = files; // Asigna el archivo al input\r\n                    showPreview(files[0]); // Muestra la vista previa de la imagen\r\n                }\r\n            });\r\n    \r\n            // Muestra la vista previa de la imagen seleccionada\r\n            fileInput.addEventListener('change', (event) => {\r\n                const file = event.target.files[0];\r\n                if (file) {\r\n                    showPreview(file);\r\n                }\r\n            });\r\n    \r\n            // Función para mostrar la vista previa de la imagen\r\n            function showPreview(file) {\r\n                const reader = new FileReader();\r\n                reader.onload = function(event) {\r\n                    preview.src = event.target.result;\r\n                    preview.style.display = 'block'; // Muestra la imagen en el cuadro\r\n                    dropzone.classList.add('has-image'); // Oculta el ícono y el texto\r\n                };\r\n                reader.readAsDataURL(file); // Lee la imagen como una URL de datos\r\n            }\r\n    \r\n            // Envío del formulario con solo la imagen\r\n            form.addEventListener('submit', (event) => {\r\n                event.preventDefault();\r\n    \r\n                const formData = new FormData();\r\n                const file = fileInput.files[0]; // Obtén solo el archivo\r\n    \r\n                if (file) {\r\n                    formData.append('imagen', file); // Añade solo la imagen al FormData\r\n                } else {\r\n                    alert('No has seleccionado ninguna imagen');\r\n                    return;\r\n                }\r\n    \r\n                fetch('/admin/imagenes/nuevo', {\r\n                    method: 'POST',\r\n                    body: formData\r\n                })\r\n                .then(response => response.text())\r\n                .then(result => {\r\n    \r\n                    Swal.fire({\r\n                        title: 'Éxito',\r\n                        text: 'Imagen subida exitosamente',\r\n                        icon: 'success',\r\n                        confirmButtonText: 'OK'\r\n                    }).then(() => {\r\n                        window.location.href = '/admin/imagenes';\r\n                    });\r\n    \r\n                })\r\n                .catch(error => {\r\n                    alert('Error al subir la imagen');\r\n                    console.error(error);\r\n                });\r\n            });\r\n            \r\n        }\r\n\r\n    });\r\n})();\r\n","(function() {\r\n    const menu = document.querySelector(\"#menu\");\r\n    const menuMovil = document.querySelector(\".barra__movil\");\r\n    const xIcon = document.querySelector(\".barra__movil--x\");\r\n    const opacidad = document.querySelector(\".barra__opacidad\");\r\n\r\n    if(menu) {\r\n\r\n      menu.addEventListener(\"click\", function() {\r\n        menuMovil.classList.toggle(\"barra__activo\");\r\n        toggleScroll(); // Deshabilitar o habilitar el scroll\r\n      });\r\n    \r\n      xIcon.addEventListener(\"click\", function() {\r\n        menuMovil.classList.remove(\"barra__activo\");\r\n        toggleScroll(); // Deshabilitar o habilitar el scroll\r\n      });\r\n  \r\n      opacidad.addEventListener(\"click\", function() {\r\n        menuMovil.classList.remove(\"barra__activo\");\r\n        toggleScroll(); // Deshabilitar o habilitar el scroll\r\n      });\r\n  \r\n      function toggleScroll() {\r\n        document.body.classList.toggle(\"no-scroll\");\r\n      }\r\n      \r\n    }\r\n  \r\n})();\r\n","(function() {\r\n    const slider = document.querySelector('.slides-of');\r\n    const slides = document.querySelectorAll('.slide-of');\r\n    let currentIndex = 0;\r\n\r\n    if(slider) {\r\n\r\n        function nextSlide() {\r\n            currentIndex++;\r\n            if (currentIndex >= slides.length) {\r\n                currentIndex = 0;\r\n            }\r\n            updateSlider();\r\n        }\r\n    \r\n        function updateSlider() {\r\n            const offset = -currentIndex * 100;\r\n            slider.style.transform = `translateX(${offset}%)`;\r\n        }\r\n    \r\n        setInterval(nextSlide, 2000);\r\n\r\n    }\r\n\r\n})();\r\n","document.addEventListener(\"DOMContentLoaded\", function() {\r\n  // Swiper para el primer slider\r\n  const slider1 = document.querySelector('.mySwiper');\r\n  if (slider1) {\r\n    var swiper1 = new Swiper(\".mySwiper\", {\r\n      slidesPerView: 1,\r\n      spaceBetween: 30,\r\n      loop: true,\r\n      autoplay: {\r\n        delay: 2500,\r\n        disableOnInteraction: false,\r\n      },\r\n      pagination: {\r\n        el: '.swiper-pagination',\r\n        clickable: true,\r\n      },\r\n      navigation: {\r\n        nextEl: '.swiper-button-next',\r\n        prevEl: '.swiper-button-prev',\r\n      },\r\n    });\r\n  }\r\n\r\n  \r\n});"]}